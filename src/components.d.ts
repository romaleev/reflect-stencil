/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  InputData,
} from './utils/utils';

export namespace Components {
  interface ReflectForm {}
  interface ReflectInput {
    /**
    * Clears input contents
    * @public
    */
    'clear': () => Promise<void>;
    /**
    * @returns data with input fields values of type [[InputData]].
    * @public
    */
    'getData': () => Promise<InputData>;
    /**
    * @param data with input fields values of type [[InputData]].
    * @public
    */
    'setData': (data: InputData) => Promise<void>;
  }
}

declare global {


  interface HTMLReflectFormElement extends Components.ReflectForm, HTMLStencilElement {}
  var HTMLReflectFormElement: {
    prototype: HTMLReflectFormElement;
    new (): HTMLReflectFormElement;
  };

  interface HTMLReflectInputElement extends Components.ReflectInput, HTMLStencilElement {}
  var HTMLReflectInputElement: {
    prototype: HTMLReflectInputElement;
    new (): HTMLReflectInputElement;
  };
  interface HTMLElementTagNameMap {
    'reflect-form': HTMLReflectFormElement;
    'reflect-input': HTMLReflectInputElement;
  }
}

declare namespace LocalJSX {
  interface ReflectForm {
    /**
    * @event `formSubmitted` emitted per successful form submission
    * @public
    */
    'onFormSubmitted'?: (event: CustomEvent<InputData>) => void;
  }
  interface ReflectInput {
    /**
    * @event `inputChanged` emitted per input value change
    * @public
    */
    'onInputChanged'?: (event: CustomEvent<InputData>) => void;
  }

  interface IntrinsicElements {
    'reflect-form': ReflectForm;
    'reflect-input': ReflectInput;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'reflect-form': LocalJSX.ReflectForm & JSXBase.HTMLAttributes<HTMLReflectFormElement>;
      'reflect-input': LocalJSX.ReflectInput & JSXBase.HTMLAttributes<HTMLReflectInputElement>;
    }
  }
}


